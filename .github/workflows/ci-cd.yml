name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    
    - name: Run tests
      run: |
        python -m unittest discover src/tests
    
    - name: Build Docker image
      run: docker build -t dmolio/item-management-api:${{ github.sha }} src
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Push image to Docker Hub
      run: |
        docker push dmolio/item-management-api:${{ github.sha }}
        docker tag dmolio/item-management-api:${{ github.sha }} dmolio/item-management-api:latest
        docker push dmolio/item-management-api:latest

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: your-aws-region

    - name: Update kubeconfig
      run: |
        aws eks get-token --cluster-name demo-cluster --region us-east-1 | kubectl apply -f -
        aws eks update-kubeconfig --name demo-cluster --region us-east-1

    - name: Update Kubernetes manifests
      run: |
        sed -i 's|dmolio/item-management-api:.*|dmolio/item-management-api:${{ github.sha }}|' kubernetes/deployment.yaml

    - name: Commit and push updated manifests
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add kubernetes/deployment.yaml
        git commit -m "Update image tag to ${{ github.sha }}"
        git push

    - name: Trigger ArgoCD sync
      run: |
        argocd app sync item-management-api
